📌 1. Overview of a Digital Certificate
A digital certificate (specifically an SSL/TLS certificate) is used to establish a secure, encrypted connection between a client (browser) and a server (google.com in this case). It's issued by a Certificate Authority (CA) and contains:

Server identity information

Public key

Expiration date

Digital signature from the CA

Google uses TLS (Transport Layer Security), the modern replacement for SSL.

📄 2. Certificate Details for google.com
(As of the latest check — details may vary slightly depending on CDN or geographic edge server.)

✅ Subject Name (CN):
Common Name (CN): *.google.com

This means the certificate is a wildcard certificate, valid for any subdomain under google.com.

✅ Issuer:
Certificate Authority (CA): GTS CA 1C3

Organization: Google Trust Services LLC

This is Google's own Certificate Authority, which is trusted by all major browsers.

✅ Subject Alternative Names (SAN):
*.google.com, google.com

Allows the certificate to be valid for multiple domains/subdomains, a security and convenience best practice.

✅ Validity Period:
Start Date: Varies (e.g., April 1, 2025)

Expiration Date: Typically 90 days later (e.g., June 30, 2025)

Google uses short-lived certificates for enhanced security.

✅ Signature Algorithm:
SHA-256 with RSA Encryption (SHA256-RSA)

A strong cryptographic algorithm widely supported and secure against practical attacks.

✅ Public Key Algorithm:
RSA (2048-bit key)

Google is slowly migrating toward ECDSA (Elliptic Curve Digital Signature Algorithm) for better performance and smaller key sizes.

🛡️ 3. Security Features
🔐 Forward Secrecy:
Google supports Perfect Forward Secrecy (PFS) using ECDHE key exchange, which ensures past sessions cannot be decrypted even if the private key is compromised later.

📦 OCSP Stapling:
Google uses Online Certificate Status Protocol (OCSP) Stapling, which improves performance and security by allowing the server to "staple" a signed certificate revocation status directly to the TLS handshake.

📡 HTTP Strict Transport Security (HSTS):
google.com enforces HSTS, instructing browsers to always use HTTPS, even when users type just http://.

🧾 Certificate Chain
Google’s certificate chains up to a trusted root in browsers:

Leaf Certificate: *.google.com

Intermediate CA: GTS CA 1C3

Root CA: GlobalSign Root CA – R1 or GTS Root R1, depending on the path and browser trust store.

This chain ensures that even if the leaf or intermediate is compromised, browsers only trust certificates that chain up to a known, trusted root.

🔍 4. How to View It Yourself
You can inspect Google’s certificate in any browser:

Visit https://www.google.com

Click the lock icon in the address bar

View the certificate (may be under “Connection is secure” > “Certificate is valid”)

Or use the terminal:

bash
Copy
Edit
openssl s_client -connect google.com:443 -servername google.com
⚖️ Security Best Practices Implemented by Google
Feature	Status
HTTPS Everywhere	✅
HSTS Preloading	✅
Forward Secrecy	✅
OCSP Stapling	✅
DNS CAA Records	✅
Short-lived Certificates	✅

📌 Summary
The TLS certificate used by google.com is:

Issued by Google’s in-house CA (GTS)

Wildcard-enabled and supports SANs

Valid for a short period (typically 90 days)

Implements robust encryption (SHA256-RSA, RSA 2048 or better)

Supports modern features like Forward Secrecy and OCSP stapling

These practices put Google at the forefront of secure web communication and make it a model for other large-scale web services.

